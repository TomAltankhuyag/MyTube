{"ast":null,"code":"/**\n *\n * @param {String} chosenString -\n * @param {Object} opts\n */\n\nconst KEY = 'AIzaSyDC5m0zYh3K6erncCUBGw9AXhAAf4wV8o8';\nexport function validateVideoId(id = '16y1AkoZkmQ') {\n  const videoID = id;\n  const request = new XMLHttpRequest();\n  request.open('GET', 'https://www.googleapis.com/youtube/v3/videos?id=' + videoID + '&key=' + KEY, true);\n  request.onreadystatechange = event => {\n    if (request.readyState === request.DONE) {\n      onReadyState(request);\n    }\n  };\n  request.send();\n}\nfunction onReadyState(request) {\n  if (request.status !== 200) {\n    console.error('Google API ded');\n  }\n  const responseText = JSON.parse(request.responseText);\n  if (responseText.items.length) {\n    console.log('VALID videoID');\n  } else {\n    console.log('INVALID videoID');\n  }\n}\nexport function videoIdParser(chosenString = 'www.youtube.com/watch?jo=123&v=titties&pp=32', opts = {}) {\n  // not a URL\n  if (!chosenString.includes('.com')) {\n    return chosenString;\n  }\n  const filterStrings = ['youtube.com', 'm.youtube.com', 'youtu.be'];\n  // lord forgive me\n  const WWW = 'www.';\n  const shift = chosenString.includes(WWW) ? chosenString.indexOf(WWW) + WWW.length : 0;\n  let youtubeUrl = chosenString.substring(shift, chosenString.indexOf('/', shift));\n  if (!youtubeUrl.includes('https://')) {\n    youtubeUrl = 'https://' + youtubeUrl;\n  }\n  const youtubeURLObject = new URL(youtubeUrl);\n  const hostname = youtubeURLObject.hostname;\n  let validUrl = false;\n  filterStrings.every(domain => {\n    if (hostname === domain) {\n      validUrl = true;\n      return false;\n    }\n  });\n  if (!validUrl) {\n    console.log('not a certified youtube link');\n  }\n  const params = new URLSearchParams(chosenString);\n  const videoId = params.get('v');\n  console.log(videoId);\n  if (!videoId) {\n    console.log('no v=');\n  }\n  return videoId;\n}\nexport default {\n  videoIdParser\n};","map":{"version":3,"names":["KEY","validateVideoId","id","videoID","request","XMLHttpRequest","open","onreadystatechange","event","readyState","DONE","onReadyState","send","status","console","error","responseText","JSON","parse","items","length","log","videoIdParser","chosenString","opts","includes","filterStrings","WWW","shift","indexOf","youtubeUrl","substring","youtubeURLObject","URL","hostname","validUrl","every","domain","params","URLSearchParams","videoId","get"],"sources":["X:/Coding/MyTube/src/utility/parser/video-id-parser.js"],"sourcesContent":["/**\n *\n * @param {String} chosenString -\n * @param {Object} opts\n */\n\n\n\n\nconst KEY = 'AIzaSyDC5m0zYh3K6erncCUBGw9AXhAAf4wV8o8'\n\nexport function validateVideoId(id = '16y1AkoZkmQ') {\n  const videoID = id;\n\n  const request = new XMLHttpRequest();\n  request.open('GET', 'https://www.googleapis.com/youtube/v3/videos?id=' + videoID + '&key=' + KEY, true);\n\n  request.onreadystatechange = (event) => {\n    if (request.readyState === request.DONE) {\n      onReadyState(request)\n    }\n  }\n\n  request.send()\n}\n\n\n\nfunction onReadyState(request) {\n  if (request.status !== 200) {\n    console.error('Google API ded')\n  }\n\n  const responseText = JSON.parse(request.responseText)\n  if (responseText.items.length) {\n    console.log('VALID videoID')\n  } else {\n    console.log('INVALID videoID')\n  }\n}\n\nexport function videoIdParser(chosenString = 'www.youtube.com/watch?jo=123&v=titties&pp=32', opts = {}) {\n  // not a URL\n  if (!chosenString.includes('.com')) {\n    return chosenString\n  }\n\n  const filterStrings = ['youtube.com', 'm.youtube.com', 'youtu.be']\n  // lord forgive me\n  const WWW = 'www.'\n  const shift = chosenString.includes(WWW) ? chosenString.indexOf(WWW) + WWW.length : 0\n  let youtubeUrl = chosenString.substring(shift, chosenString.indexOf('/', shift))\n\n  if (!youtubeUrl.includes('https://')) {\n    youtubeUrl = 'https://' + youtubeUrl\n  }\n  const youtubeURLObject = new URL(youtubeUrl)\n\n  const hostname = youtubeURLObject.hostname\n  let validUrl = false\n  filterStrings.every((domain)=> {\n    if (hostname === domain) {\n      validUrl = true\n      return false\n    }\n  })\n  if (!validUrl) {\n    console.log('not a certified youtube link')\n  }\n\n\n\n  const params = new URLSearchParams(chosenString)\n  const videoId = params.get('v')\n\n  console.log(videoId)\n  if (!videoId) {\n    console.log('no v=')\n  }\n  return videoId\n\n}\n\n\nexport default {\n  videoIdParser,\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAKA,MAAMA,GAAG,GAAG,yCAAyC;AAErD,OAAO,SAASC,eAAeA,CAACC,EAAE,GAAG,aAAa,EAAE;EAClD,MAAMC,OAAO,GAAGD,EAAE;EAElB,MAAME,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;EACpCD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAE,kDAAkD,GAAGH,OAAO,GAAG,OAAO,GAAGH,GAAG,EAAE,IAAI,CAAC;EAEvGI,OAAO,CAACG,kBAAkB,GAAIC,KAAK,IAAK;IACtC,IAAIJ,OAAO,CAACK,UAAU,KAAKL,OAAO,CAACM,IAAI,EAAE;MACvCC,YAAY,CAACP,OAAO,CAAC;IACvB;EACF,CAAC;EAEDA,OAAO,CAACQ,IAAI,CAAC,CAAC;AAChB;AAIA,SAASD,YAAYA,CAACP,OAAO,EAAE;EAC7B,IAAIA,OAAO,CAACS,MAAM,KAAK,GAAG,EAAE;IAC1BC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;EACjC;EAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACd,OAAO,CAACY,YAAY,CAAC;EACrD,IAAIA,YAAY,CAACG,KAAK,CAACC,MAAM,EAAE;IAC7BN,OAAO,CAACO,GAAG,CAAC,eAAe,CAAC;EAC9B,CAAC,MAAM;IACLP,OAAO,CAACO,GAAG,CAAC,iBAAiB,CAAC;EAChC;AACF;AAEA,OAAO,SAASC,aAAaA,CAACC,YAAY,GAAG,8CAA8C,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACtG;EACA,IAAI,CAACD,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;IAClC,OAAOF,YAAY;EACrB;EAEA,MAAMG,aAAa,GAAG,CAAC,aAAa,EAAE,eAAe,EAAE,UAAU,CAAC;EAClE;EACA,MAAMC,GAAG,GAAG,MAAM;EAClB,MAAMC,KAAK,GAAGL,YAAY,CAACE,QAAQ,CAACE,GAAG,CAAC,GAAGJ,YAAY,CAACM,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,CAACP,MAAM,GAAG,CAAC;EACrF,IAAIU,UAAU,GAAGP,YAAY,CAACQ,SAAS,CAACH,KAAK,EAAEL,YAAY,CAACM,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC,CAAC;EAEhF,IAAI,CAACE,UAAU,CAACL,QAAQ,CAAC,UAAU,CAAC,EAAE;IACpCK,UAAU,GAAG,UAAU,GAAGA,UAAU;EACtC;EACA,MAAME,gBAAgB,GAAG,IAAIC,GAAG,CAACH,UAAU,CAAC;EAE5C,MAAMI,QAAQ,GAAGF,gBAAgB,CAACE,QAAQ;EAC1C,IAAIC,QAAQ,GAAG,KAAK;EACpBT,aAAa,CAACU,KAAK,CAAEC,MAAM,IAAI;IAC7B,IAAIH,QAAQ,KAAKG,MAAM,EAAE;MACvBF,QAAQ,GAAG,IAAI;MACf,OAAO,KAAK;IACd;EACF,CAAC,CAAC;EACF,IAAI,CAACA,QAAQ,EAAE;IACbrB,OAAO,CAACO,GAAG,CAAC,8BAA8B,CAAC;EAC7C;EAIA,MAAMiB,MAAM,GAAG,IAAIC,eAAe,CAAChB,YAAY,CAAC;EAChD,MAAMiB,OAAO,GAAGF,MAAM,CAACG,GAAG,CAAC,GAAG,CAAC;EAE/B3B,OAAO,CAACO,GAAG,CAACmB,OAAO,CAAC;EACpB,IAAI,CAACA,OAAO,EAAE;IACZ1B,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC;EACtB;EACA,OAAOmB,OAAO;AAEhB;AAGA,eAAe;EACblB;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}