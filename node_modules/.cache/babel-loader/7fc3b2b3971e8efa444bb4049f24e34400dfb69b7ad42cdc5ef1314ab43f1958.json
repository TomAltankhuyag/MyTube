{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { START_SONG_INDEX } from \"../../constants/constants\";\nexport const actions = {\n  syncPlaylist(index = 0) {\n    if (this.playlists.length === 0) {\n      console.warn('no playlists ):');\n      return;\n    }\n    // Initialize both user and hidden playlist\n    this.currentPlaylist = [...this.playlists[index].playlist];\n    if (!this.currentVideo.videoId) {\n      const songIndex = getRandomInt(0, this.currentPlaylist.length);\n      this.changeCurrentSongInPlaylist(songIndex);\n    }\n  },\n  changeCurrentSongInPlaylist(index = START_SONG_INDEX) {\n    if (this.currentPlaylist.length === 0) {\n      console.warn('out of songs!');\n      return;\n    }\n    const video = this.currentPlaylist[index];\n    this.currentVideo = video;\n  },\n  changeCurrentSongBySong(video) {\n    if (Object.keys(video).length === 0) {\n      console.warn('no video provided');\n    }\n    this.currentVideo = video;\n  },\n  removeSongByVideoId(videoId) {\n    const video = this.currentPlaylist.find(video => video.videoId === videoId);\n    const index = this.currentPlaylist.indexOf(video);\n    // Index is returned as -1 if no matching video is found\n    if (index >= 0) {\n      this.currentPlaylist.splice(index, 1);\n    }\n  },\n  addSongToEnd(video) {\n    this.currentPlaylist.push(video);\n  },\n  addSongToFirst(video) {\n    this.currentPlaylist.unshift(video);\n  },\n  loadPlaylistWithPayload(payload) {\n    console.log(payload);\n    const newPlaylist = [];\n    payload.items.forEach(item => {\n      const video = {};\n      video.videoId = item.contentDetails.videoId;\n      video.name = item.snippet.title;\n      newPlaylist.push(video);\n    });\n    this.currentPlaylist = [...newPlaylist];\n  }\n};\n// min - Inclusive\n// max - Exclusive\nfunction getRandomInt(min = 0, max) {\n  if (!max) {\n    console.warn('max warning');\n  }\n  return Math.floor(Math.random() * (max - min) + min);\n}","map":{"version":3,"names":["START_SONG_INDEX","actions","syncPlaylist","index","playlists","length","console","warn","currentPlaylist","playlist","currentVideo","videoId","songIndex","getRandomInt","changeCurrentSongInPlaylist","video","changeCurrentSongBySong","Object","keys","removeSongByVideoId","find","indexOf","splice","addSongToEnd","push","addSongToFirst","unshift","loadPlaylistWithPayload","payload","log","newPlaylist","items","forEach","item","contentDetails","name","snippet","title","min","max","Math","floor","random"],"sources":["X:/Coding/MyTube/src/store/playlist/actions.js"],"sourcesContent":["import { START_SONG_INDEX } from \"../../constants/constants\"\n\nexport const actions = {\n  syncPlaylist(index = 0) {\n    if (this.playlists.length === 0) {\n      console.warn('no playlists ):')\n      return\n    }\n    // Initialize both user and hidden playlist\n    this.currentPlaylist = [...this.playlists[index].playlist]\n\n    if (!this.currentVideo.videoId) {\n      const songIndex = getRandomInt(0, this.currentPlaylist.length)\n      this.changeCurrentSongInPlaylist(songIndex)\n    }\n  },\n  changeCurrentSongInPlaylist(index = START_SONG_INDEX) {\n    if (this.currentPlaylist.length === 0) {\n      console.warn('out of songs!')\n      return\n    }\n    const video = this.currentPlaylist[index]\n    this.currentVideo = video\n  },\n  changeCurrentSongBySong(video) {\n    if (Object.keys(video).length === 0) {\n      console.warn('no video provided')\n    }\n    this.currentVideo = video\n  },\n  removeSongByVideoId(videoId) {\n    const video = this.currentPlaylist.find(video => video.videoId === videoId)\n    const index = this.currentPlaylist.indexOf(video)\n    // Index is returned as -1 if no matching video is found\n    if (index >= 0) {\n      this.currentPlaylist.splice(index, 1)\n    }\n  },\n  addSongToEnd(video) {\n\n    this.currentPlaylist.push(video)\n  },\n  addSongToFirst(video) {\n    this.currentPlaylist.unshift(video)\n  },\n  loadPlaylistWithPayload(payload) {\n    console.log(payload)\n    const newPlaylist = []\n    payload.items.forEach((item) => {\n      const video = {}\n      video.videoId = item.contentDetails.videoId\n      video.name = item.snippet.title\n      newPlaylist.push(video)\n    })\n    this.currentPlaylist = [...newPlaylist]\n  }\n}\n// min - Inclusive\n// max - Exclusive\nfunction getRandomInt(min = 0, max) {\n  if (!max) {\n    console.warn('max warning')\n  }\n  return Math.floor(Math.random() * (max - min) + min)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}