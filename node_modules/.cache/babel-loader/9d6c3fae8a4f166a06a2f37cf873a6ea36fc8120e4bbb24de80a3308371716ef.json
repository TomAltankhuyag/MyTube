{"ast":null,"code":"import { YOUTUBE_API_CODES } from '../constants/constants';\nimport { YOUTUBE_API_KEY } from \"../constants/api-key\";\nexport function fetchVideoInformation(id = 'lxF31-mHLz0') {\n  return new Promise(resolve => {\n    const videoID = id;\n    const request = new XMLHttpRequest();\n    request.open('GET', 'https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=' + videoID + '&key=' + YOUTUBE_API_KEY, true);\n    request.onreadystatechange = () => {\n      if (request.readyState === request.DONE) {\n        const code = onRequestReady(request);\n        resolve(code);\n      }\n    };\n    request.send();\n  });\n}\nfunction onRequestReady(request) {\n  if (!request || request.status < 200 || request.status >= 300) {\n    return YOUTUBE_API_CODES.GOOGLE_ERROR;\n  }\n  const responseText = JSON.parse(request.responseText);\n  if (responseText.items && responseText.items.length) {\n    const payload = {\n      status: YOUTUBE_API_CODES.VALID,\n      items: responseText.items\n    };\n    return payload;\n  } else {\n    return {\n      status: YOUTUBE_API_CODES.INVALID\n    };\n  }\n}","map":{"version":3,"names":["YOUTUBE_API_CODES","YOUTUBE_API_KEY","fetchVideoInformation","id","Promise","resolve","videoID","request","XMLHttpRequest","open","onreadystatechange","readyState","DONE","code","onRequestReady","send","status","GOOGLE_ERROR","responseText","JSON","parse","items","length","payload","VALID","INVALID"],"sources":["X:/Coding/MyTube/src/utility/youtube-video-validation.js"],"sourcesContent":["import { YOUTUBE_API_CODES } from '../constants/constants'\r\nimport { YOUTUBE_API_KEY } from \"../constants/api-key\"\r\n\r\nexport function fetchVideoInformation(id = 'lxF31-mHLz0') {\r\n  return new Promise((resolve) => {\r\n    const videoID = id\r\n    const request = new XMLHttpRequest()\r\n\r\n    request.open('GET', 'https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id='\r\n      + videoID + '&key=' + YOUTUBE_API_KEY, true)\r\n\r\n    request.onreadystatechange = () => {\r\n      if (request.readyState === request.DONE) {\r\n        const code = onRequestReady(request)\r\n        resolve(code)\r\n      }\r\n    }\r\n\r\n    request.send()\r\n  })\r\n}\r\n\r\nfunction onRequestReady(request) {\r\n  if (!request || request.status < 200 || request.status >= 300) {\r\n    return YOUTUBE_API_CODES.GOOGLE_ERROR\r\n  }\r\n\r\n  const responseText = JSON.parse(request.responseText)\r\n\r\n  if (responseText.items && responseText.items.length) {\r\n    const payload = {\r\n      status: YOUTUBE_API_CODES.VALID,\r\n      items: responseText.items\r\n    }\r\n    return payload\r\n  } else {\r\n    return { status: YOUTUBE_API_CODES.INVALID }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,OAAO,SAASC,qBAAqBA,CAACC,EAAE,GAAG,aAAa,EAAE;EACxD,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGH,EAAE;IAClB,MAAMI,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;IAEpCD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAE,6FAA6F,GAC7GH,OAAO,GAAG,OAAO,GAAGL,eAAe,EAAE,IAAI,CAAC;IAE9CM,OAAO,CAACG,kBAAkB,GAAG,MAAM;MACjC,IAAIH,OAAO,CAACI,UAAU,KAAKJ,OAAO,CAACK,IAAI,EAAE;QACvC,MAAMC,IAAI,GAAGC,cAAc,CAACP,OAAO,CAAC;QACpCF,OAAO,CAACQ,IAAI,CAAC;MACf;IACF,CAAC;IAEDN,OAAO,CAACQ,IAAI,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ;AAEA,SAASD,cAAcA,CAACP,OAAO,EAAE;EAC/B,IAAI,CAACA,OAAO,IAAIA,OAAO,CAACS,MAAM,GAAG,GAAG,IAAIT,OAAO,CAACS,MAAM,IAAI,GAAG,EAAE;IAC7D,OAAOhB,iBAAiB,CAACiB,YAAY;EACvC;EAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACb,OAAO,CAACW,YAAY,CAAC;EAErD,IAAIA,YAAY,CAACG,KAAK,IAAIH,YAAY,CAACG,KAAK,CAACC,MAAM,EAAE;IACnD,MAAMC,OAAO,GAAG;MACdP,MAAM,EAAEhB,iBAAiB,CAACwB,KAAK;MAC/BH,KAAK,EAAEH,YAAY,CAACG;IACtB,CAAC;IACD,OAAOE,OAAO;EAChB,CAAC,MAAM;IACL,OAAO;MAAEP,MAAM,EAAEhB,iBAAiB,CAACyB;IAAQ,CAAC;EAC9C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}