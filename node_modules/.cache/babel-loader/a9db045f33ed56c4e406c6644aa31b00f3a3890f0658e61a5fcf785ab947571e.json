{"ast":null,"code":"/**\n *\n * @param {String} chosenString -\n * @param {Object} opts\n */\n\nconst KEY = 'AIzaSyDC5m0zYh3K6erncCUBGw9AXhAAf4wV8o8';\nfunction validateVideoId(id = '16y1AkoZkmQ') {\n  const videoID = id;\n  const request = new XMLHttpRequest();\n  console.log('plz');\n  request.open('GET', 'https://www.googleapis.com/youtube/v3/videos?id=' + videoID + '&key=' + KEY, true);\n  request.onreadystatechange = event => {\n    if (request.readyState === request.DONE) {\n      onReadyState(request);\n    }\n  };\n  request.send();\n}\nfunction onReadyState(request) {\n  if (request.status !== 200) {\n    console.error('Google API ded');\n  }\n  const responseText = JSON.parse(request.responseText);\n  if (responseText.items.length) {\n    console.log('VALID videoID');\n  } else {\n    console.log('INVALID videoID');\n  }\n}\nexport default function videoIdParser(chosenString, opts = {}) {\n  // validateVideoId()\n  // potential types of strings:\n  // https://www.youtube.com/watch?v=suSuy8Sg-TY&list=RD_83LZ79VMLg&index=4&ab_channel=MrMoMMusic\n  // normal 'FU-pEDpOPeU'\n}","map":{"version":3,"names":["KEY","validateVideoId","id","videoID","request","XMLHttpRequest","console","log","open","onreadystatechange","event","readyState","DONE","onReadyState","send","status","error","responseText","JSON","parse","items","length","videoIdParser","chosenString","opts"],"sources":["X:/Coding/MyTube/src/utility/parser/video-id-parser.js"],"sourcesContent":["/**\n *\n * @param {String} chosenString -\n * @param {Object} opts\n */\n\n\n\nconst KEY = 'AIzaSyDC5m0zYh3K6erncCUBGw9AXhAAf4wV8o8'\n\nfunction validateVideoId(id = '16y1AkoZkmQ') {\n  const videoID = id;\n\n  const request = new XMLHttpRequest();\n  console.log('plz')\n  request.open('GET', 'https://www.googleapis.com/youtube/v3/videos?id='+ videoID + '&key=' + KEY, true);\n  request.onreadystatechange = (event) =>{\n    if (request.readyState === request.DONE) {\n      onReadyState(request)\n    }\n  }\n  request.send()\n\n}\n\n\n\nfunction onReadyState(request) {\n  if(request.status !== 200) {\n    console.error('Google API ded')\n  }\n  const responseText = JSON.parse(request.responseText)\n  if (responseText.items.length) {\n    console.log('VALID videoID')\n  } else {\n    console.log('INVALID videoID')\n  }\n}\n\nexport default function videoIdParser(chosenString, opts = {}) {\n  // validateVideoId()\n  // potential types of strings:\n  // https://www.youtube.com/watch?v=suSuy8Sg-TY&list=RD_83LZ79VMLg&index=4&ab_channel=MrMoMMusic\n  // normal 'FU-pEDpOPeU'\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAIA,MAAMA,GAAG,GAAG,yCAAyC;AAErD,SAASC,eAAeA,CAACC,EAAE,GAAG,aAAa,EAAE;EAC3C,MAAMC,OAAO,GAAGD,EAAE;EAElB,MAAME,OAAO,GAAG,IAAIC,cAAc,CAAC,CAAC;EACpCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClBH,OAAO,CAACI,IAAI,CAAC,KAAK,EAAE,kDAAkD,GAAEL,OAAO,GAAG,OAAO,GAAGH,GAAG,EAAE,IAAI,CAAC;EACtGI,OAAO,CAACK,kBAAkB,GAAIC,KAAK,IAAI;IACrC,IAAIN,OAAO,CAACO,UAAU,KAAKP,OAAO,CAACQ,IAAI,EAAE;MACvCC,YAAY,CAACT,OAAO,CAAC;IACvB;EACF,CAAC;EACDA,OAAO,CAACU,IAAI,CAAC,CAAC;AAEhB;AAIA,SAASD,YAAYA,CAACT,OAAO,EAAE;EAC7B,IAAGA,OAAO,CAACW,MAAM,KAAK,GAAG,EAAE;IACzBT,OAAO,CAACU,KAAK,CAAC,gBAAgB,CAAC;EACjC;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACf,OAAO,CAACa,YAAY,CAAC;EACrD,IAAIA,YAAY,CAACG,KAAK,CAACC,MAAM,EAAE;IAC7Bf,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B,CAAC,MAAM;IACLD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC;AACF;AAEA,eAAe,SAASe,aAAaA,CAACC,YAAY,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC7D;EACA;EACA;EACA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}