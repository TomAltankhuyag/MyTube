{"ast":null,"code":"import YoutubeVideo from './components/YoutubeVideo.vue';\nimport YoutubeController from './components/YoutubeController.vue';\nimport DebugPanel from './components/DebugPanel.vue';\nimport { usePlaylistStore } from './store/playlist';\nimport { VSwitch } from 'vuetify/components';\nimport { mapState } from 'pinia';\nexport default {\n  name: 'App',\n  components: {\n    YoutubeVideo,\n    YoutubeController,\n    DebugPanel,\n    VSwitch\n  },\n  data() {\n    return {\n      isDebuggerOn: true\n    };\n  },\n  methods: {\n    // onSubmit(input) {\n    //   const videoId = videoIdParser(input)\n    //   validateVideoId(videoId).then((status) => {\n    //     if (status === YOUTUBE_API_CODES.VALID) {\n    //       this.onValidIdSubmission(/*  TODO   */)\n    //       this.videoId = videoId\n    //     }\n    //   })\n    // },\n    // onValidIdSubmission(videoId) {\n    //   //TODO validateVideoId should return a payload of information including videoId, name, Channel\n    //   // see youtube-video-validation.js\n    // }\n  },\n  computed: {\n    ...mapState(usePlaylistStore, ['currentSong']),\n    videoId() {\n      return this.currentSong.videoId;\n    }\n  }\n};","map":{"version":3,"names":["YoutubeVideo","YoutubeController","DebugPanel","usePlaylistStore","VSwitch","mapState","name","components","data","isDebuggerOn","methods","computed","videoId","currentSong"],"sources":["X:\\Coding\\MyTube\\src\\App.vue"],"sourcesContent":["<template lang=\"pug\">\n#app.app\n  .youtube-app-container\n    youtube-controller.controller\n    youtube-video(:videoId=\"videoId\").video\n    v-switch(v-model=\"isDebuggerOn\"\n             label=\"debugger\"\n             color=\"red\"\n             :class=\"{activated: isDebuggerOn}\").switch-style\n    debug-panel(v-if=\"isDebuggerOn\")\n</template>\n\n<script>\nimport YoutubeVideo from './components/YoutubeVideo.vue'\nimport YoutubeController from './components/YoutubeController.vue'\nimport DebugPanel from './components/DebugPanel.vue'\nimport { usePlaylistStore } from './store/playlist'\nimport { VSwitch } from 'vuetify/components'\nimport { mapState } from 'pinia'\nexport default {\n  name: 'App',\n  components: {\n    YoutubeVideo,\n    YoutubeController,\n    DebugPanel,\n    VSwitch\n  },\n  data() {\n    return {\n      isDebuggerOn: true\n    }\n  },\n  methods: {\n    // onSubmit(input) {\n    //   const videoId = videoIdParser(input)\n    //   validateVideoId(videoId).then((status) => {\n    //     if (status === YOUTUBE_API_CODES.VALID) {\n    //       this.onValidIdSubmission(/*  TODO   */)\n    //       this.videoId = videoId\n    //     }\n    //   })\n    // },\n    // onValidIdSubmission(videoId) {\n    //   //TODO validateVideoId should return a payload of information including videoId, name, Channel\n    //   // see youtube-video-validation.js\n    // }\n  },\n  computed: {\n    ...mapState(usePlaylistStore, ['currentSong']),\n\n    videoId() {\n      return this.currentSong.videoId\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'src/styles/flex';\n\n.youtube-app-container {\n  @include flex-column();\n\n  .controller {\n    margin-bottom: 30px;\n  }\n\n  .video {\n    margin: 15px;\n  }\n}\n\n.switch-style {\n  color: red;\n  font-family: copperplate;\n\n  &.activated {\n    color: blue;\n    font-family: papyrus;\n  }\n}\n\n.youtube-app-container {\n  @include flex-column();\n}\n</style>\n<style lang=\"scss\">\n// * {\n//   background-image: url('assets/images/pinkStreets.jpg');\n//   background-size: cover;\n//   // background-repeat: no-repeat, repeat;\n//   background-attachment: fixed;\n// }\n</style>\n"],"mappings":"AAaA,OAAOA,YAAW,MAAO,+BAA8B;AACvD,OAAOC,iBAAgB,MAAO,oCAAmC;AACjE,OAAOC,UAAS,MAAO,6BAA4B;AACnD,SAASC,gBAAe,QAAS,kBAAiB;AAClD,SAASC,OAAM,QAAS,oBAAmB;AAC3C,SAASC,QAAO,QAAS,OAAM;AAC/B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVP,YAAY;IACZC,iBAAiB;IACjBC,UAAU;IACVE;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EACDC,QAAQ,EAAE;IACR,GAAGN,QAAQ,CAACF,gBAAgB,EAAE,CAAC,aAAa,CAAC,CAAC;IAE9CS,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,WAAW,CAACD,OAAM;IAChC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}