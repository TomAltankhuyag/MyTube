{"ast":null,"code":"import YoutubeVideo from './components/YoutubeVideo.vue';\nimport YoutubeConfigurator from './components/YoutubeConfigurator.vue';\nimport DebugPanel from './components/DebugPanel.vue';\nimport { videoIdParser } from './utility/parser';\nimport { validateVideoId } from './utility/validator/youtube-video-validation';\nimport { YOUTUBE_API_CODES } from './constants/constants';\nimport { useItemStore } from './store/item';\nimport { usePlaylistStore } from './store/playlist';\nimport { VSwitch } from 'vuetify/components';\nexport default {\n  name: 'App',\n  components: {\n    YoutubeVideo,\n    YoutubeConfigurator,\n    DebugPanel,\n    VSwitch\n  },\n  data() {\n    return {\n      videoId: '',\n      autoPause: false,\n      label: 'Enter a URL or video ID',\n      placeholder: 'ex: https://www.youtube.com/watch?v=_83LZ79VMLg&ab_channel=MrMoMMusic',\n      isDebuggerOn: false,\n      joe: false\n    };\n  },\n  methods: {\n    onSubmit(input) {\n      const videoId = videoIdParser(input);\n      validateVideoId(videoId).then(status => {\n        if (status === YOUTUBE_API_CODES.VALID) {\n          this.videoId = videoId;\n        }\n      });\n    },\n    onToggleSwitch(isDebuggerOn) {\n      this.autoPause = isDebuggerOn;\n      const store = useItemStore();\n      store.doShit();\n    }\n  },\n  mounted() {\n    const playStore = usePlaylistStore();\n    const {\n      videoId\n    } = playStore.getCurrentSong;\n    this.videoId = videoId;\n    console.log(this.videoId);\n  },\n  watch: {\n    joe() {\n      const playStore = usePlaylistStore();\n      playStore.syncPlaylist();\n      playStore.loadSongByindex();\n      playStore.playNextSong();\n      // playStore.removeSongByVideoId()\n    },\n\n    isDebuggerOn() {}\n  }\n};","map":{"version":3,"names":["YoutubeVideo","YoutubeConfigurator","DebugPanel","videoIdParser","validateVideoId","YOUTUBE_API_CODES","useItemStore","usePlaylistStore","VSwitch","name","components","data","videoId","autoPause","label","placeholder","isDebuggerOn","joe","methods","onSubmit","input","then","status","VALID","onToggleSwitch","store","doShit","mounted","playStore","getCurrentSong","console","log","watch","syncPlaylist","loadSongByindex","playNextSong"],"sources":["X:\\Coding\\MyTube\\src\\App.vue"],"sourcesContent":["<template lang=\"pug\">\n#app.app\n  .youtube-app-container\n    youtube-configurator(:placeholder=\"placeholder\"\n                         :label=\"label\"\n                         @onSubmit=\"onSubmit\"\n                         @toggle-switch=\"onToggleSwitch\").configurator\n    youtube-video(:videoId=\"videoId\"\n                  :autoPause=\"autoPause\").video\n    v-switch(v-model=\"isDebuggerOn\"\n             label=\"debugger\"\n             color=\"red\"\n             :class=\"{activated: isDebuggerOn}\").switch-style\n    v-switch(v-model=\"joe\"\n             label=\"another one\"\n             color=\"indigo\"\n             :class=\"{activated: joe}\").switch-style\n    debug-panel(v-if=\"isDebuggerOn\")\n</template>\n\n<script>\nimport YoutubeVideo from './components/YoutubeVideo.vue'\nimport YoutubeConfigurator from './components/YoutubeConfigurator.vue'\nimport DebugPanel from './components/DebugPanel.vue'\nimport { videoIdParser } from './utility/parser'\nimport { validateVideoId } from './utility/validator/youtube-video-validation'\nimport { YOUTUBE_API_CODES } from './constants/constants'\nimport { useItemStore } from './store/item'\nimport { usePlaylistStore } from './store/playlist'\nimport { VSwitch } from 'vuetify/components'\nexport default {\n  name: 'App',\n  components: {\n    YoutubeVideo,\n    YoutubeConfigurator,\n    DebugPanel,\n    VSwitch\n  },\n  data() {\n    return {\n      videoId: '',\n      autoPause: false,\n      label: 'Enter a URL or video ID',\n      placeholder: 'ex: https://www.youtube.com/watch?v=_83LZ79VMLg&ab_channel=MrMoMMusic',\n      isDebuggerOn: false,\n      joe: false\n\n    }\n  },\n  methods: {\n    onSubmit(input) {\n      const videoId = videoIdParser(input)\n      validateVideoId(videoId).then((status) => {\n        if (status === YOUTUBE_API_CODES.VALID) {\n          this.videoId = videoId\n        }\n      })\n    },\n    onToggleSwitch(isDebuggerOn) {\n      this.autoPause = isDebuggerOn\n      const store = useItemStore()\n      store.doShit()\n    }\n  },\n  mounted(){\n    const playStore = usePlaylistStore()\n    const {videoId} = playStore.getCurrentSong\n    this.videoId = videoId\n    console.log(this.videoId);\n  },\n  watch: {\n    joe() {\n      const playStore = usePlaylistStore()\n      playStore.syncPlaylist()\n      playStore.loadSongByindex()\n      playStore.playNextSong()\n      // playStore.removeSongByVideoId()\n    },\n    isDebuggerOn(){\n\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'src/styles/flex';\n\n.youtube-app-container{\n  @include flex-column();\n  .configurator {\n    margin-bottom: 30px;\n  }\n  .video {\n    margin: 15px;\n  }\n}\n\n.switch-style {\n  color: red;\n  font-family: copperplate;\n  &.activated {\n    color: blue;\n    font-family: papyrus;\n  }\n}\n.youtube-app-container {\n  @include flex-column();\n}\n</style>\n<style lang=\"scss\">\n// * {\n//   background-image: url('assets/images/pinkStreets.jpg');\n//   background-size: cover;\n//   // background-repeat: no-repeat, repeat;\n//   background-attachment: fixed;\n// }\n</style>\n"],"mappings":"AAqBA,OAAOA,YAAW,MAAO,+BAA8B;AACvD,OAAOC,mBAAkB,MAAO,sCAAqC;AACrE,OAAOC,UAAS,MAAO,6BAA4B;AACnD,SAASC,aAAY,QAAS,kBAAiB;AAC/C,SAASC,eAAc,QAAS,8CAA6C;AAC7E,SAASC,iBAAgB,QAAS,uBAAsB;AACxD,SAASC,YAAW,QAAS,cAAa;AAC1C,SAASC,gBAAe,QAAS,kBAAiB;AAClD,SAASC,OAAM,QAAS,oBAAmB;AAC3C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVV,YAAY;IACZC,mBAAmB;IACnBC,UAAU;IACVM;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,yBAAyB;MAChCC,WAAW,EAAE,uEAAuE;MACpFC,YAAY,EAAE,KAAK;MACnBC,GAAG,EAAE;IAEP;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,KAAK,EAAE;MACd,MAAMR,OAAM,GAAIT,aAAa,CAACiB,KAAK;MACnChB,eAAe,CAACQ,OAAO,CAAC,CAACS,IAAI,CAAEC,MAAM,IAAK;QACxC,IAAIA,MAAK,KAAMjB,iBAAiB,CAACkB,KAAK,EAAE;UACtC,IAAI,CAACX,OAAM,GAAIA,OAAM;QACvB;MACF,CAAC;IACH,CAAC;IACDY,cAAcA,CAACR,YAAY,EAAE;MAC3B,IAAI,CAACH,SAAQ,GAAIG,YAAW;MAC5B,MAAMS,KAAI,GAAInB,YAAY,CAAC;MAC3BmB,KAAK,CAACC,MAAM,CAAC;IACf;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,MAAMC,SAAQ,GAAIrB,gBAAgB,CAAC;IACnC,MAAM;MAACK;IAAO,IAAIgB,SAAS,CAACC,cAAa;IACzC,IAAI,CAACjB,OAAM,GAAIA,OAAM;IACrBkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,OAAO,CAAC;EAC3B,CAAC;EACDoB,KAAK,EAAE;IACLf,GAAGA,CAAA,EAAG;MACJ,MAAMW,SAAQ,GAAIrB,gBAAgB,CAAC;MACnCqB,SAAS,CAACK,YAAY,CAAC;MACvBL,SAAS,CAACM,eAAe,CAAC;MAC1BN,SAAS,CAACO,YAAY,CAAC;MACvB;IACF,CAAC;;IACDnB,YAAYA,CAAA,EAAE,CAEd;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}