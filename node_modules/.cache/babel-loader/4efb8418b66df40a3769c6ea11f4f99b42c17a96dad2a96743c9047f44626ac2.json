{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"song-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.currentPlaylist, (song, id) => {\n    return _openBlock(), _createElementBlock(\"ul\", null, [_createElementVNode(\"h4\", null, \"videoId: \" + _toDisplayString(song.videoId), 1 /* TEXT */), _createElementVNode(\"h4\", null, \"name: \" + _toDisplayString(song.name), 1 /* TEXT */), id !== 0 ? (_openBlock(), _createBlock(_component_v_divider, {\n      key: 0\n    })) : _createCommentVNode(\"v-if\", true)]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","currentPlaylist","song","id","_createElementVNode","_toDisplayString","videoId","name","_createBlock","_component_v_divider","key","_createCommentVNode"],"sources":["X:\\Coding\\MyTube\\src\\components\\SongList.vue"],"sourcesContent":["<div class=\"song-list\"><ul v-for=\"(song, id) in currentPlaylist\"><h4>videoId: {{ song.videoId }}</h4><h4>name: {{ song.name }}</h4><v-divider v-if=\"id !== 0\"></v-divider></ul></div>"],"mappings":";;EAAKA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAAqL,OAArLC,UAAqL,I,kBAA9JD,mBAAA,CAAwJE,SAAA,QAA/KC,WAAA,CAAgDC,IAAA,CAAAC,eAAe,EAA/D,CAAmCC,IAAI,EAAEC,EAAE;yBAApBP,mBAAA,CAAwJ,aAA9GQ,mBAAA,CAAoC,YAAhC,WAAS,GAAAC,gBAAA,CAAGH,IAAI,CAACI,OAAO,kBAAQF,mBAAA,CAA8B,YAA1B,QAAM,GAAAC,gBAAA,CAAGH,IAAI,CAACK,IAAI,kBAAyBJ,EAAE,U,cAAnBK,YAAA,CAAuCC,oBAAA;MAA1KC,GAAA;IAAA,MAAAC,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}