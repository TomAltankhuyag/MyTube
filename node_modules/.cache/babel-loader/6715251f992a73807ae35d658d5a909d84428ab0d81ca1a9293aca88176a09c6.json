{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport const actions = {\n  syncPlaylist(index = 0) {\n    if (this.playlists.length === 0) {\n      console.warn('no playlists ):');\n      return;\n    }\n    // Initialize both user and hidden playlist\n    this.currentPlaylist = [...this.playlists[index].playlist];\n    if (!this.currentVideo.videoId) {\n      const songIndex = getRandomInt(0, this.currentPlaylist.length);\n      this.changeVideoByIndex(songIndex);\n    }\n  },\n  changeVideoByIndex(index = 0) {\n    let video;\n    if (this.currentPlaylist.length === 0) {\n      console.warn('out of songs!');\n      return;\n    }\n    if (index < this.currentPlaylist.length) {\n      video = this.currentPlaylist[index];\n      this.currentIndex = index;\n    } else {\n      video = this.currentPlaylist[0];\n      this.currentIndex = 0;\n    }\n    this.currentVideo = video;\n  },\n  changeCurrentVideoByVideo(video) {\n    if (!video || Object.keys(video).length === 0) {\n      console.warn('no video provided');\n    }\n    this.currentVideo = video;\n  },\n  removeVideoByVideoId(videoId) {\n    const video = this.currentPlaylist.find(video => video.videoId === videoId);\n    const index = this.currentPlaylist.indexOf(video);\n    // Index is returned as -1 if no matching video is found\n    if (index >= 0) {\n      this.currentPlaylist.splice(index, 1);\n    }\n  },\n  addVideoToEnd(video) {\n    const newVideo = {\n      ...video\n    };\n    this.currentPlaylist.push(newVideo);\n  },\n  addVideoToFirst(video) {\n    this.currentPlaylist.unshift(video);\n  },\n  loadPlaylistWithPayload(payload) {\n    payload.items.forEach(item => {\n      const video = {};\n      video.videoId = item.contentDetails.videoId;\n      video.name = item.snippet.title;\n      this.addVideoToEnd(video);\n    });\n  }\n};\n// min - Inclusive\n// max - Exclusive\nfunction getRandomInt(min = 0, max) {\n  if (!max) {\n    console.warn('max warning');\n  }\n  return Math.floor(Math.random() * (max - min) + min);\n}","map":{"version":3,"names":["actions","syncPlaylist","index","playlists","length","console","warn","currentPlaylist","playlist","currentVideo","videoId","songIndex","getRandomInt","changeVideoByIndex","video","currentIndex","changeCurrentVideoByVideo","Object","keys","removeVideoByVideoId","find","indexOf","splice","addVideoToEnd","newVideo","push","addVideoToFirst","unshift","loadPlaylistWithPayload","payload","items","forEach","item","contentDetails","name","snippet","title","min","max","Math","floor","random"],"sources":["X:/Coding/MyTube/src/store/playlist/actions.js"],"sourcesContent":["export const actions = {\r\n  syncPlaylist(index = 0) {\r\n    if (this.playlists.length === 0) {\r\n      console.warn('no playlists ):')\r\n      return\r\n    }\r\n    // Initialize both user and hidden playlist\r\n    this.currentPlaylist = [...this.playlists[index].playlist]\r\n\r\n    if (!this.currentVideo.videoId) {\r\n      const songIndex = getRandomInt(0, this.currentPlaylist.length)\r\n      this.changeVideoByIndex(songIndex)\r\n    }\r\n  },\r\n  changeVideoByIndex(index = 0) {\r\n    let video\r\n    if (this.currentPlaylist.length === 0) {\r\n      console.warn('out of songs!')\r\n      return\r\n    }\r\n\r\n    if (index < this.currentPlaylist.length) {\r\n      video = this.currentPlaylist[index]\r\n      this.currentIndex = index\r\n    } else {\r\n      video = this.currentPlaylist[0]\r\n      this.currentIndex = 0\r\n    }\r\n    this.currentVideo = video\r\n  },\r\n  changeCurrentVideoByVideo(video) {\r\n    if (!video || Object.keys(video).length === 0) {\r\n      console.warn('no video provided')\r\n    }\r\n    this.currentVideo = video\r\n  },\r\n  removeVideoByVideoId(videoId) {\r\n    const video = this.currentPlaylist.find(video => video.videoId === videoId)\r\n    const index = this.currentPlaylist.indexOf(video)\r\n    // Index is returned as -1 if no matching video is found\r\n    if (index >= 0) {\r\n      this.currentPlaylist.splice(index, 1)\r\n    }\r\n  },\r\n  addVideoToEnd(video) {\r\n    const newVideo = {\r\n      ...video\r\n    }\r\n    this.currentPlaylist.push(newVideo)\r\n  },\r\n  addVideoToFirst(video) {\r\n    this.currentPlaylist.unshift(video)\r\n  },\r\n  loadPlaylistWithPayload(payload) {\r\n    payload.items.forEach((item) => {\r\n      const video = {}\r\n      video.videoId = item.contentDetails.videoId\r\n      video.name = item.snippet.title\r\n      this.addVideoToEnd(video)\r\n    })\r\n  }\r\n}\r\n// min - Inclusive\r\n// max - Exclusive\r\nfunction getRandomInt(min = 0, max) {\r\n  if (!max) {\r\n    console.warn('max warning')\r\n  }\r\n  return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}